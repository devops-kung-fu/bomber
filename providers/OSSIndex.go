package providers

import (
	"encoding/json"
	"log"

	"github.com/kirinlabs/HttpRequest"
)

// Generated by https://quicktype.io

type CoordinateRequest struct {
	Coordinates []string `json:"coordinates"`
}

// Generated by https://quicktype.io

type CoordinateResponses []CoordinateResponse

type CoordinateResponse struct {
	Coordinates     string        `json:"coordinates"`
	Reference       string        `json:"reference"`
	Description     string        `json:"description"`
	Vulnerabilities []interface{} `json:"vulnerabilities"`
}

func OSSIndex(purls []string, username, token string) (coordinateResponses CoordinateResponses, err error) {
	j := len(purls)
	for i := 0; i < j; i += 128 {
		z := i + 128
		if z > j {
			z = j
		}
		p := purls[i:z]
		var coordinates CoordinateRequest
		coordinates.Coordinates = append(coordinates.Coordinates, p...)
		URL := "https://ossindex.sonatype.org/api/v3/authorized/component-report"
		req := HttpRequest.NewRequest()
		req.SetBasicAuth(username, token)

		resp, err := req.JSON().Post(URL, coordinates)

		defer func() {
			err = resp.Close()
		}()

		log.Printf("OSSIndex Status: %v", resp.StatusCode())

		body, err := resp.Body()
		if err != nil {
			return nil, err
		}
		var responses CoordinateResponses
		err = json.Unmarshal(body, &responses)

		coordinateResponses = append(coordinateResponses, responses...)
	}
	return
}
